{"version":3,"file":"5068.c62e8735fd273166.js","mappings":"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","names":["_c0","a0","enterDuration","_c1","MatLegacyCheckboxChange","_createClass","_classCallCheck","this","MAT_LEGACY_CHECKBOX_CONTROL_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","MatLegacyCheckbox","multi","_MatCheckboxBase2","_inherits","_super","_createSuper","elementRef","changeDetectorRef","_focusMonitor","ngZone","tabIndex","animationMode","options","_this","call","_animationClasses","uncheckedToChecked","uncheckedToIndeterminate","checkedToUnchecked","checkedToIndeterminate","indeterminateToChecked","indeterminateToUnchecked","key","value","isChecked","event","source","checked","_elementRef","nativeElement","_this2","_get","_getPrototypeOf","prototype","monitor","subscribe","focusOrigin","_onBlur","stopMonitoring","stopPropagation","origin","focusVia","_inputElement","focus","_MatCheckboxBase","ɵfac","t","i0","i1","ANIMATION_MODULE_TYPE","MAT_CHECKBOX_DEFAULT_OPTIONS","ɵcmp","type","selectors","hostAttrs","hostVars","hostBindings","rf","ctx","id","indeterminate","disabled","labelPosition","_animationMode","inputs","disableRipple","color","exportAs","features","ngContentSelectors","decls","vars","consts","template","$event","_onInteractionEvent","_onInputClick","_onLabelTextChange","_r0","_r2","inputId","textContent","trim","required","name","ariaLabel","ariaLabelledby","ariaDescribedby","_isRippleDisabled","dependencies","i2","i3","styles","encapsulation","changeDetection","MatLegacyCheckboxModule","ɵmod","ɵinj","imports","MatRippleModule","MatCommonModule","ObserversModule","_MatCheckboxRequiredValidatorModule","_assertThisInitialized","self","ReferenceError","Derived","hasNativeReflectConstruct","isNativeReflectConstruct","Z","result","Super","getPrototypeOf","NewTarget","constructor","Reflect","construct","arguments","apply","_possibleConstructorReturn","esm_typeof","TypeError","assertThisInitialized","get","bind","target","property","receiver","base","_superPropBase","object","Object","hasOwnProperty","desc","getOwnPropertyDescriptor","length","o","setPrototypeOf","__proto__","subClass","superClass","create","writable","configurable","defineProperty","_setPrototypeOf_js__WEBPACK_IMPORTED_MODULE_0__","_isNativeReflectConstruct","sham","Proxy","Boolean","valueOf","_setPrototypeOf","p"],"sourceRoot":"webpack:///","sources":["./node_modules/@angular/material/fesm2022/legacy-checkbox.mjs","./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","./node_modules/@babel/runtime/helpers/esm/createSuper.js","./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","./node_modules/@babel/runtime/helpers/esm/get.js","./node_modules/@babel/runtime/helpers/esm/superPropBase.js","./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","./node_modules/@babel/runtime/helpers/esm/inherits.js","./node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js"],"sourcesContent":["import * as i1 from '@angular/cdk/a11y';\nimport * as i0 from '@angular/core';\nimport { forwardRef, Component, ViewEncapsulation, ChangeDetectionStrategy, Attribute, Optional, Inject, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { _MatCheckboxBase, MAT_CHECKBOX_DEFAULT_OPTIONS, _MatCheckboxRequiredValidatorModule } from '@angular/material/checkbox';\nexport { MAT_CHECKBOX_DEFAULT_OPTIONS as MAT_LEGACY_CHECKBOX_DEFAULT_OPTIONS, MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY as MAT_LEGACY_CHECKBOX_DEFAULT_OPTIONS_FACTORY, MAT_CHECKBOX_REQUIRED_VALIDATOR as MAT_LEGACY_CHECKBOX_REQUIRED_VALIDATOR, MatCheckboxRequiredValidator as MatLegacyCheckboxRequiredValidator, _MatCheckboxRequiredValidatorModule as _MatLegacyCheckboxRequiredValidatorModule } from '@angular/material/checkbox';\nimport * as i2 from '@angular/material/core';\nimport { MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport * as i3 from '@angular/cdk/observers';\nimport { ObserversModule } from '@angular/cdk/observers';\n\n/**\n * Change event object emitted by a checkbox.\n * @deprecated Use `MatCheckboxChange` from `@angular/material/checkbox` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyCheckboxChange {\n}\n/**\n * Provider Expression that allows mat-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n * @deprecated Use `MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR` from `@angular/material/checkbox` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nconst MAT_LEGACY_CHECKBOX_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatLegacyCheckbox),\n    multi: true,\n};\n/**\n * A material design checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. A checkbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n * See: https://material.io/design/components/selection-controls.html\n * @deprecated Use `MatCheckbox` from `@angular/material/checkbox` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyCheckbox extends _MatCheckboxBase {\n    constructor(elementRef, changeDetectorRef, _focusMonitor, ngZone, tabIndex, animationMode, options) {\n        super('mat-checkbox-', elementRef, changeDetectorRef, ngZone, tabIndex, animationMode, options);\n        this._focusMonitor = _focusMonitor;\n        this._animationClasses = {\n            uncheckedToChecked: 'mat-checkbox-anim-unchecked-checked',\n            uncheckedToIndeterminate: 'mat-checkbox-anim-unchecked-indeterminate',\n            checkedToUnchecked: 'mat-checkbox-anim-checked-unchecked',\n            checkedToIndeterminate: 'mat-checkbox-anim-checked-indeterminate',\n            indeterminateToChecked: 'mat-checkbox-anim-indeterminate-checked',\n            indeterminateToUnchecked: 'mat-checkbox-anim-indeterminate-unchecked',\n        };\n    }\n    _createChangeEvent(isChecked) {\n        const event = new MatLegacyCheckboxChange();\n        event.source = this;\n        event.checked = isChecked;\n        return event;\n    }\n    _getAnimationTargetElement() {\n        return this._elementRef.nativeElement;\n    }\n    ngAfterViewInit() {\n        super.ngAfterViewInit();\n        this._focusMonitor.monitor(this._elementRef, true).subscribe(focusOrigin => {\n            if (!focusOrigin) {\n                this._onBlur();\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /**\n     * Event handler for checkbox input element.\n     * Toggles checked state if element is not disabled.\n     * Do not toggle on (change) event since IE doesn't fire change event when\n     *   indeterminate checkbox is clicked.\n     * @param event\n     */\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `checkbox` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n        super._handleInputClick();\n    }\n    /** Focuses the checkbox. */\n    focus(origin, options) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._inputElement, origin, options);\n        }\n        else {\n            this._inputElement.nativeElement.focus(options);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyCheckbox, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1.FocusMonitor }, { token: i0.NgZone }, { token: 'tabindex', attribute: true }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: MAT_CHECKBOX_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatLegacyCheckbox, selector: \"mat-checkbox\", inputs: { disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\" }, host: { properties: { \"id\": \"id\", \"attr.tabindex\": \"null\", \"attr.aria-label\": \"null\", \"attr.aria-labelledby\": \"null\", \"class.mat-checkbox-indeterminate\": \"indeterminate\", \"class.mat-checkbox-checked\": \"checked\", \"class.mat-checkbox-disabled\": \"disabled\", \"class.mat-checkbox-label-before\": \"labelPosition == \\\"before\\\"\", \"class._mat-animation-noopable\": \"_animationMode === 'NoopAnimations'\" }, classAttribute: \"mat-checkbox\" }, providers: [MAT_LEGACY_CHECKBOX_CONTROL_VALUE_ACCESSOR], exportAs: [\"matCheckbox\"], usesInheritance: true, ngImport: i0, template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-checkbox-layout\\\" #label>\\n  <span class=\\\"mat-checkbox-inner-container\\\"\\n       [class.mat-checkbox-inner-container-no-side-margin]=\\\"!checkboxLabel.textContent || !checkboxLabel.textContent.trim()\\\">\\n    <input #input\\n           class=\\\"mat-checkbox-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [checked]=\\\"checked\\\"\\n           [attr.value]=\\\"value\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [attr.aria-label]=\\\"ariaLabel || null\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n           (change)=\\\"_onInteractionEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n    <span matRipple class=\\\"mat-checkbox-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: _animationMode === 'NoopAnimations' ? 0 : 150}\\\">\\n      <span class=\\\"mat-ripple-element mat-checkbox-persistent-ripple\\\"></span>\\n    </span>\\n    <span class=\\\"mat-checkbox-frame\\\"></span>\\n    <span class=\\\"mat-checkbox-background\\\">\\n      <svg version=\\\"1.1\\\"\\n           focusable=\\\"false\\\"\\n           class=\\\"mat-checkbox-checkmark\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           aria-hidden=\\\"true\\\">\\n        <path class=\\\"mat-checkbox-checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              stroke=\\\"white\\\"\\n              d=\\\"M4.1,12.7 9,17.6 20.3,6.3\\\"/>\\n      </svg>\\n      <!-- Element for rendering the indeterminate state checkbox. -->\\n      <span class=\\\"mat-checkbox-mixedmark\\\"></span>\\n    </span>\\n  </span>\\n  <span class=\\\"mat-checkbox-label\\\" #checkboxLabel (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\", styles: [\"@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{display:inline-block;transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:rgba(0,0,0,0);position:relative}.mat-checkbox._mat-animation-noopable{transition:none !important;animation:none !important}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-checkbox-layout{-webkit-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:rgba(0,0,0,0);transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1);-webkit-print-color-adjust:exact;color-adjust:exact}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{display:block;width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:rgba(0,0,0,0)}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}.mat-checkbox-input:focus~.mat-focus-indicator::before{content:\\\"\\\"}\"], dependencies: [{ kind: \"directive\", type: i2.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"directive\", type: i3.CdkObserveContent, selector: \"[cdkObserveContent]\", inputs: [\"cdkObserveContentDisabled\", \"debounce\"], outputs: [\"cdkObserveContent\"], exportAs: [\"cdkObserveContent\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyCheckbox, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-checkbox', exportAs: 'matCheckbox', host: {\n                        'class': 'mat-checkbox',\n                        '[id]': 'id',\n                        '[attr.tabindex]': 'null',\n                        '[attr.aria-label]': 'null',\n                        '[attr.aria-labelledby]': 'null',\n                        '[class.mat-checkbox-indeterminate]': 'indeterminate',\n                        '[class.mat-checkbox-checked]': 'checked',\n                        '[class.mat-checkbox-disabled]': 'disabled',\n                        '[class.mat-checkbox-label-before]': 'labelPosition == \"before\"',\n                        '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`,\n                    }, providers: [MAT_LEGACY_CHECKBOX_CONTROL_VALUE_ACCESSOR], inputs: ['disableRipple', 'color', 'tabIndex'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-checkbox-layout\\\" #label>\\n  <span class=\\\"mat-checkbox-inner-container\\\"\\n       [class.mat-checkbox-inner-container-no-side-margin]=\\\"!checkboxLabel.textContent || !checkboxLabel.textContent.trim()\\\">\\n    <input #input\\n           class=\\\"mat-checkbox-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [checked]=\\\"checked\\\"\\n           [attr.value]=\\\"value\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [attr.aria-label]=\\\"ariaLabel || null\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n           (change)=\\\"_onInteractionEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n    <span matRipple class=\\\"mat-checkbox-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: _animationMode === 'NoopAnimations' ? 0 : 150}\\\">\\n      <span class=\\\"mat-ripple-element mat-checkbox-persistent-ripple\\\"></span>\\n    </span>\\n    <span class=\\\"mat-checkbox-frame\\\"></span>\\n    <span class=\\\"mat-checkbox-background\\\">\\n      <svg version=\\\"1.1\\\"\\n           focusable=\\\"false\\\"\\n           class=\\\"mat-checkbox-checkmark\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           aria-hidden=\\\"true\\\">\\n        <path class=\\\"mat-checkbox-checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              stroke=\\\"white\\\"\\n              d=\\\"M4.1,12.7 9,17.6 20.3,6.3\\\"/>\\n      </svg>\\n      <!-- Element for rendering the indeterminate state checkbox. -->\\n      <span class=\\\"mat-checkbox-mixedmark\\\"></span>\\n    </span>\\n  </span>\\n  <span class=\\\"mat-checkbox-label\\\" #checkboxLabel (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\", styles: [\"@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{display:inline-block;transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:rgba(0,0,0,0);position:relative}.mat-checkbox._mat-animation-noopable{transition:none !important;animation:none !important}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-checkbox-layout{-webkit-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:rgba(0,0,0,0);transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1);-webkit-print-color-adjust:exact;color-adjust:exact}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{display:block;width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:rgba(0,0,0,0)}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}.mat-checkbox-input:focus~.mat-focus-indicator::before{content:\\\"\\\"}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.FocusMonitor }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_CHECKBOX_DEFAULT_OPTIONS]\n                }] }]; } });\n\n/**\n * @deprecated Use `MatCheckboxModule` from `@angular/material/checkbox` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyCheckboxModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyCheckboxModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyCheckboxModule, declarations: [MatLegacyCheckbox], imports: [MatRippleModule, MatCommonModule, ObserversModule, _MatCheckboxRequiredValidatorModule], exports: [MatLegacyCheckbox, MatCommonModule, _MatCheckboxRequiredValidatorModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyCheckboxModule, imports: [MatRippleModule, MatCommonModule, ObserversModule, _MatCheckboxRequiredValidatorModule, MatCommonModule, _MatCheckboxRequiredValidatorModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyCheckboxModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatRippleModule, MatCommonModule, ObserversModule, _MatCheckboxRequiredValidatorModule],\n                    exports: [MatLegacyCheckbox, MatCommonModule, _MatCheckboxRequiredValidatorModule],\n                    declarations: [MatLegacyCheckbox],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_LEGACY_CHECKBOX_CONTROL_VALUE_ACCESSOR, MatLegacyCheckbox, MatLegacyCheckboxChange, MatLegacyCheckboxModule };\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}"],"x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9]}